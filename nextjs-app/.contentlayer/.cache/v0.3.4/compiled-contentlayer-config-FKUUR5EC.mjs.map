{
  "version": 3,
  "sources": ["../../../data/siteMetadata.js", "../../../contentlayer.config.ts"],
  "sourcesContent": ["/** @type {import(\"pliny/config\").PlinyConfig } */\r\nconst siteMetadata = {\r\n  title: 'Next.js Starter Blog',\r\n  author: 'Tails Azimuth',\r\n  headerTitle: 'TailwindBlog',\r\n  description: 'A blog created with Next.js and Tailwind.css',\r\n  language: 'en-us',\r\n  theme: 'system', // system, dark or light\r\n  siteUrl: 'https://tailwind-nextjs-starter-blog.vercel.app',\r\n  siteRepo: 'https://github.com/timlrx/tailwind-nextjs-starter-blog',\r\n  siteLogo: `${process.env.BASE_PATH || ''}/static/images/logo.png`,\r\n  socialBanner: `${process.env.BASE_PATH || ''}/static/images/twitter-card.png`,\r\n  mastodon: 'https://mastodon.social/@mastodonuser',\r\n  email: 'address@yoursite.com',\r\n  github: 'https://github.com',\r\n  x: 'https://twitter.com/x',\r\n  // twitter: 'https://twitter.com/Twitter',\r\n  facebook: 'https://facebook.com',\r\n  youtube: 'https://youtube.com',\r\n  linkedin: 'https://www.linkedin.com',\r\n  threads: 'https://www.threads.net',\r\n  instagram: 'https://www.instagram.com',\r\n  medium: 'https://medium.com',\r\n  locale: 'en-US',\r\n  // set to true if you want a navbar fixed to the top\r\n  stickyNav: false,\r\n  analytics: {\r\n    // If you want to use an analytics provider you have to add it to the\r\n    // content security policy in the `next.config.js` file.\r\n    // supports Plausible, Simple Analytics, Umami, Posthog or Google Analytics.\r\n    umamiAnalytics: {\r\n      // We use an env variable for this site to avoid other users cloning our analytics ID\r\n      umamiWebsiteId: process.env.NEXT_UMAMI_ID, // e.g. 123e4567-e89b-12d3-a456-426614174000\r\n      // You may also need to overwrite the script if you're storing data in the US - ex:\r\n      // src: 'https://us.umami.is/script.js'\r\n      // Remember to add 'us.umami.is' in `next.config.js` as a permitted domain for the CSP\r\n    },\r\n    // plausibleAnalytics: {\r\n    //   plausibleDataDomain: '', // e.g. tailwind-nextjs-starter-blog.vercel.app\r\n    // If you are hosting your own Plausible.\r\n    //   src: '', // e.g. https://plausible.my-domain.com/js/script.js\r\n    // },\r\n    // simpleAnalytics: {},\r\n    // posthogAnalytics: {\r\n    //   posthogProjectApiKey: '', // e.g. 123e4567-e89b-12d3-a456-426614174000\r\n    // },\r\n    // googleAnalytics: {\r\n    //   googleAnalyticsId: '', // e.g. G-XXXXXXX\r\n    // },\r\n  },\r\n  newsletter: {\r\n    // supports mailchimp, buttondown, convertkit, klaviyo, revue, emailoctopus, beehive\r\n    // Please add your .env file and modify it according to your selection\r\n    provider: 'buttondown',\r\n  },\r\n  comments: {\r\n    // If you want to use an analytics provider you have to add it to the\r\n    // content security policy in the `next.config.js` file.\r\n    // Select a provider and use the environment variables associated to it\r\n    // https://vercel.com/docs/environment-variables\r\n    provider: 'giscus', // supported providers: giscus, utterances, disqus\r\n    giscusConfig: {\r\n      // Visit the link below, and follow the steps in the 'configuration' section\r\n      // https://giscus.app/\r\n      repo: process.env.NEXT_PUBLIC_GISCUS_REPO,\r\n      repositoryId: process.env.NEXT_PUBLIC_GISCUS_REPOSITORY_ID,\r\n      category: process.env.NEXT_PUBLIC_GISCUS_CATEGORY,\r\n      categoryId: process.env.NEXT_PUBLIC_GISCUS_CATEGORY_ID,\r\n      mapping: 'pathname', // supported options: pathname, url, title\r\n      reactions: '1', // Emoji reactions: 1 = enable / 0 = disable\r\n      // Send discussion metadata periodically to the parent window: 1 = enable / 0 = disable\r\n      metadata: '0',\r\n      // theme example: light, dark, dark_dimmed, dark_high_contrast\r\n      // transparent_dark, preferred_color_scheme, custom\r\n      theme: 'light',\r\n      // theme when dark mode\r\n      darkTheme: 'transparent_dark',\r\n      // If the theme option above is set to 'custom`\r\n      // please provide a link below to your custom theme css file.\r\n      // example: https://giscus.app/themes/custom_example.css\r\n      themeURL: '',\r\n      // This corresponds to the `data-lang=\"en\"` in giscus's configurations\r\n      lang: 'en',\r\n    },\r\n  },\r\n  search: {\r\n    provider: 'kbar', // kbar or algolia\r\n    kbarConfig: {\r\n      searchDocumentsPath: `${process.env.BASE_PATH || ''}/search.json`, // path to load documents to search\r\n    },\r\n    // provider: 'algolia',\r\n    // algoliaConfig: {\r\n    //   // The application ID provided by Algolia\r\n    //   appId: 'R2IYF7ETH7',\r\n    //   // Public API key: it is safe to commit it\r\n    //   apiKey: '599cec31baffa4868cae4e79f180729b',\r\n    //   indexName: 'docsearch',\r\n    // },\r\n  },\r\n}\r\n\r\nmodule.exports = siteMetadata\r\n", "import { defineDocumentType, ComputedFields, makeSource } from 'contentlayer/source-files'\r\nimport { writeFileSync } from 'fs'\r\nimport readingTime from 'reading-time'\r\nimport { slug } from 'github-slugger'\r\nimport path from 'path'\r\nimport { fromHtmlIsomorphic } from 'hast-util-from-html-isomorphic'\r\nimport { allCoreContent, sortPosts } from 'pliny/utils/contentlayer'\r\nimport siteMetadata from './data/siteMetadata'\r\n\r\nconst root = process.cwd()\r\nconst isProduction = process.env.NODE_ENV === 'production'\r\n\r\nconst computedFields: ComputedFields = {\r\n  readingTime: { type: 'json', resolve: (doc) => readingTime(doc.body.raw) },\r\n  slug: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.flattenedPath.replace(/^.+?(\\/)/, ''),\r\n  },\r\n  path: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.flattenedPath,\r\n  },\r\n  filePath: {\r\n    type: 'string',\r\n    resolve: (doc) => doc._raw.sourceFilePath,\r\n  },\r\n  toc: { type: 'json', resolve: (doc) => extractTocHeadings(doc.body.raw) },\r\n}\r\n\r\nfunction createTagCount(allBlogs: any[]) {\r\n  const tagCount: Record<string, number> = {}\r\n  allBlogs.forEach((file) => {\r\n    if (file.tags && (!isProduction || file.draft !== true)) {\r\n      file.tags.forEach((tag: string) => {\r\n        const formattedTag = slug(tag)\r\n        if (formattedTag in tagCount) {\r\n          tagCount[formattedTag] += 1\r\n        } else {\r\n          tagCount[formattedTag] = 1\r\n        }\r\n      })\r\n    }\r\n  })\r\n  writeFileSync('./app/tag-data.json', JSON.stringify(tagCount))\r\n}\r\n\r\nfunction createSearchIndex(allBlogs: any[]) {\r\n  if (\r\n    siteMetadata?.search?.provider === 'kbar' &&\r\n    siteMetadata.search.kbarConfig.searchDocumentsPath\r\n  ) {\r\n    writeFileSync(\r\n      `public/${path.basename(siteMetadata.search.kbarConfig.searchDocumentsPath)}`,\r\n      JSON.stringify(allCoreContent(sortPosts(allBlogs)))\r\n    )\r\n    console.log('Local search index generated...')\r\n  }\r\n}\r\n\r\nexport const Entry = defineDocumentType(() => ({\r\n  name: 'Entry',\r\n  filePathPattern: 'entries/**/*.mdx',\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: { type: 'string', required: true },\r\n    date: { type: 'date', required: true },\r\n    tags: { type: 'list', of: { type: 'string' }, default: [] },\r\n    type: { \r\n      type: 'enum', \r\n      options: ['note', 'journal', 'document'],\r\n      required: true,\r\n      default: 'document'\r\n    },\r\n    draft: { type: 'boolean' },\r\n    summary: { type: 'string' },\r\n  },\r\n  computedFields,\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: 'data',\r\n  documentTypes: [Entry],\r\n  mdx: {\r\n    remarkPlugins: [],\r\n    rehypePlugins: [],\r\n  },\r\n  onSuccess: async (importData) => {\r\n    const { allEntries } = await importData()\r\n    createTagCount(allEntries)\r\n    createSearchIndex(allEntries)\r\n  },\r\n})\r\n"],
  "mappings": "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",
  "names": ["siteMetadata", "siteMetadata"]
}
